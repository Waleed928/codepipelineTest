AWSTemplateFormatVersion: '2010-09-09'
Description: |
  This template creates a CodePipeline for deploying a CloudFormation template from GitHub commit.
  THIS IS AN EXAMPLE - REVIEW BEFORE USE -TG
Resources:
  CFNPipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  CFNCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref CFNPipelineArtifactsBucket
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
      - Name: Source
        Actions:
        - InputArtifacts: []
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: 1
            Provider: CodeStarSourceConnection
          OutputArtifacts:
          - Name: SourceArtifact
          RunOrder: 1
          Configuration:
            ConnectionArn: "arn:aws:codestar-connections:<REPLACE_THIS_WITH_PROPER_CONNECTION_DATA"
            FullRepositoryId: "<REPLACE_THIS_WITH_PATH/TO/REPOSITORY"
            BranchName: "main"
            OutputArtifactFormat: "CODE_ZIP"
            DetectChanges: true
          Name: ApplicationSource
      - Name: Deploy
        Actions:
        - Name: CloudFormationDeploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          RunOrder: 2
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_IAM
            RoleArn: !GetAtt CloudFormationServiceRole.Arn
            StackName: <REPLACE_THIS_WITH_PROPER_STACK_NAME>
            TemplatePath: "SourceArtifact::<REPLACE_THIS_WITH_PROPER_STACK_FILE_NAME>"
          OutputArtifacts: []
          InputArtifacts:
               - Name: SourceArtifact  
  CodePipelineServiceRole:
     Type: "AWS::IAM::Role"
     Properties:
        Description: Role to provide access to CodePipeline
        RoleName: CodePipelineServiceRole
        AssumeRolePolicyDocument:
           Version: 2012-10-17
           Statement:
              - Effect: Allow
                Principal:
                   Service:
                      - codepipeline.amazonaws.com
                Action:
                   - "sts:AssumeRole"
        Policies:
          - PolicyName: CodePipelineServiceRoleInLinePolicy
            PolicyDocument: 
              Version: 2012-10-17
              Statement:
                 - Action:
                      - iam:PassRole
                   Resource: "*"
                   Effect: Allow
                   Condition:
                     StringEqualsIfExists:
                       iam:PassedToService:
                       - cloudformation.amazonaws.com
                       - elasticbeanstalk.amazonaws.com
                       - ec2.amazonaws.com
                       - ecs-tasks.amazonaws.com
                 - Action:
                      - codecommit:CancelUploadArchive
                      - codecommit:GetBranch
                      - codecommit:GetCommit
                      - codecommit:GetRepository
                      - codecommit:GetUploadArchiveStatus
                      - codecommit:UploadArchive
                   Resource: "*"
                   Effect: Allow
                 - Action:
                      - codedeploy:CreateDeployment
                      - codedeploy:GetApplication
                      - codedeploy:GetApplicationRevision
                      - codedeploy:GetDeployment
                      - codedeploy:GetDeploymentConfig
                      - codedeploy:RegisterApplicationRevision
                   Resource: "*"
                   Effect: Allow
                 - Action:
                      - codestar-connections:UseConnection
                   Resource: "*"
                   Effect: Allow
                 - Action:
                      - elasticbeanstalk:*
                      - ec2:*
                      - elasticloadbalancing:*
                      - autoscaling:*
                      - cloudwatch:*
                      - s3:*
                      - sns:*
                      - cloudformation:*
                      - rds:*
                      - sqs:*
                      - ecs:*
                   Resource: "*"
                   Effect: Allow
                 - Action:
                      - lambda:InvokeFunction
                      - lambda:ListFunctions
                   Resource: "*"
                   Effect: Allow
                 - Action:
                      - opsworks:CreateDeployment
                      - opsworks:DescribeApps
                      - opsworks:DescribeCommands
                      - opsworks:DescribeDeployments
                      - opsworks:DescribeInstances
                      - opsworks:DescribeStacks
                      - opsworks:UpdateApp
                      - opsworks:UpdateStack
                   Resource: "*"
                   Effect: Allow
                 - Action:
                      - cloudformation:CreateStack
                      - cloudformation:DeleteStack
                      - cloudformation:DescribeStacks
                      - cloudformation:UpdateStack
                      - cloudformation:CreateChangeSet
                      - cloudformation:DeleteChangeSet
                      - cloudformation:DescribeChangeSet
                      - cloudformation:ExecuteChangeSet
                      - cloudformation:SetStackPolicy
                      - cloudformation:ValidateTemplate
                   Resource: "*"
                   Effect: Allow
                 - Action:
                      - codebuild:BatchGetBuilds
                      - codebuild:StartBuild
                      - codebuild:BatchGetBuildBatches
                      - codebuild:StartBuildBatch
                   Resource: "*"
                   Effect: Allow
                 - Effect: Allow
                   Action:
                      - devicefarm:ListProjects
                      - devicefarm:ListDevicePools
                      - devicefarm:GetRun
                      - devicefarm:GetUpload
                      - devicefarm:CreateUpload
                      - devicefarm:ScheduleRun
                   Resource: "*"
                 - Effect: Allow
                   Action:
                      - servicecatalog:ListProvisioningArtifacts
                      - servicecatalog:CreateProvisioningArtifact
                      - servicecatalog:DescribeProvisioningArtifact
                      - servicecatalog:DeleteProvisioningArtifact
                      - servicecatalog:UpdateProduct
                   Resource: "*"
                 - Effect: Allow
                   Action:
                      - cloudformation:ValidateTemplate
                   Resource: "*"
                 - Effect: Allow
                   Action:
                      - ecr:DescribeImages
                   Resource: "*"
                 - Effect: Allow
                   Action:
                      - states:DescribeExecution
                      - states:DescribeStateMachine
                      - states:StartExecution
                   Resource: "*"
                 - Effect: Allow
                   Action:
                      - appconfig:StartDeployment
                      - appconfig:StopDeployment
                      - appconfig:GetDeployment
                   Resource: "*"
  CloudFormationServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Description: Role to provide access to CloudFormation
      RoleName: CloudFormationServiceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonEC2FullAccess'
        - 'arn:aws:iam::aws:policy/AWSConfigUserAccess'
        - 'arn:aws:iam::aws:policy/IAMFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonECS_FullAccess'
        - 'arn:aws:iam::aws:policy/CloudWatchFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonSNSFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonVPCFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AWSCloudTrail_FullAccess'
        - 'arn:aws:iam::aws:policy/AWSLambda_FullAccess'
